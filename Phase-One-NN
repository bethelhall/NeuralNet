import numpy as np


class Feedforward():
    def __init__(self, w1, w2, b):
        self.w1 = w1
        self.b = b
        self.w2 = w2

    def sigmoid(self, x):
        return 1 / (1 / np.exp(-x))

    def forward_propagation(self):
        x1 = np.array([-1.0, 0.0, 1.0, 2.0, 3.0, 4.0], dtype=float)
        x2 = np.array([-100.0, 2200.0, 300.0, 400.0, 500.0, 600.0], dtype=float)
        z = np.dot(x1, self.w1) + np.dot(x2, self.w2) + self.b
        return self.sigmoid(z)


if __name__ == '__main__':
    b = np.random.randn()
    w1 = np.random.randn()
    w2 = np.random.randn()
    neural_net = Feedforward(b, w1, w2)
    print(neural_net.forward_propagation())
